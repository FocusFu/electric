C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ULTRASONIC
OBJECT MODULE PLACED IN UltraSonic.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UltraSonic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************************包含头文件**********************************/
   2          #include <reg52.h>
   3          #include "1602.h"
   4          #include<intrins.h> 
   5          /************************************宏定义************************************/
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          #define VELOCITY_30C  3495       //30摄氏度时的声速，声速V= 331.5 + 0.6*温度； 
   9          #define VELOCITY_23C  3453       //23摄氏度时的声速，声速V= 331.5 + 0.6*温度； 
  10          #define BASIC 3315
  11          #define lambda 6
  12          /************************************位定义************************************/
  13          sbit INPUT  = P3^2;                //回声接收端口
  14          sbit OUTPUT = P1^5;                //超声触发端口
  15          sbit Beep   = P2^3;                // 蜂鸣器
  16          sbit DS     = P2^2;                //define interface
  17          sbit E=P2^5;            //使能信号位，将E位定义为P2.5引脚
  18          sbit BF=P0^7;           //忙碌标志位，，将BF位定义为P0.7引脚
  19          /********************************定义变量和数组********************************/
  20          long int distance=0;               //距离变量
  21          uchar table[]="  Designed by  "; 
  22          uchar table0[]="WeiLu and YuYaojia";
  23          uchar table1[]="There's no echo.";
  24          uchar table2[]="  www.hjmcu.com  ";
  25          uchar table3[]="Distance:";
  26          unsigned char code digit[10]={"0123456789"};     //定义字符数组显示数字
  27          unsigned char code Str[]={"Test by DS18B20"};    //说明显示的是温度
  28          unsigned char code Error[]={"Error!Check!"};     //说明没有检测到DS18B20
  29          unsigned char code Temp[]={"Temp:"};             //说明显示的是温度
  30          unsigned char code Cent[]={"Cent"};              //温度单位
  31          uchar count;
  32          /***********************************函数声明***********************************/
  33          extern void initLCD();
  34          extern void write_date(uchar date);
  35          extern void write_com(uchar com);
  36          extern void delay(uint x);
  37          /******************************************************************************/
  38          /* 函数名称  : Delay_xMs                                                      */
  39          /* 函数描述  : 延时函数                                                       */
  40          /* 输入参数  : x                                                              */
  41          /* 参数描述  : 延时时间                                                       */
  42          /* 返回值    : 无                                                             */
  43          /******************************************************************************/
  44          void Delay_xMs(unsigned int x)
  45          {
  46   1          unsigned int i,j;
  47   1          for(i = 0;i < x;i++ )
  48   1          {
  49   2              for(j = 0;j < 3;j++ )
  50   2              {
  51   3                  ;
  52   3              }
  53   2          }
  54   1      }
  55          /******************************************************************************/
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 2   

  56          /* 函数名称  : Alarm                                                          */
  57          /* 函数描述  : 蜂鸣器发声函数                                                 */
  58          /* 输入参数  : t                                                              */
  59          /* 参数描述  : 发声的次数                                                     */
  60          /* 返回值    : 无                                                             */
  61          /******************************************************************************/
  62          void Alarm(uchar t)
  63          {
  64   1        uchar i;
  65   1        for(i = 0;i < t;i++)
  66   1        {
  67   2          Beep = 0;
  68   2          Delay_xMs(1000);
  69   2          Beep = 1;
  70   2          Delay_xMs(1000);
  71   2        }
  72   1      } 
  73          /******************************************************************************/
  74          /* 函数名称  : delayt                                                         */
  75          /* 函数描述  : 延时函数                                                       */
  76          /* 输入参数  : x                                                              */
  77          /* 参数描述  : 延时时间数据                                                   */
  78          /* 返回值    : 无                                                             */
  79          /******************************************************************************/  
  80          void delayt(uint x)
  81          {
  82   1          uchar j;
  83   1          while(x-- > 0)
  84   1          {
  85   2              for(j = 0;j < 125;j++)
  86   2              {
  87   3                  ;
  88   3              }
  89   2          }
  90   1      }
  91          /******************************************************************************/
  92          /* 函数名称  : Init_MCU                                                       */
  93          /* 函数描述  : 初始化单片机函数                                               */
  94          /* 输入参数  : 无                                                             */
  95          /* 参数描述  : 无                                                             */
  96          /* 返回值    : 无                                                             */
  97          /******************************************************************************/
  98          void Init_MCU(void)
  99          {
 100   1        TMOD = 0x01;    //定时器2初始化,设置为16位自动重装模式
 101   1        TL0 = 0x66;
 102   1        TH0 = 0xfc;     //1ms
 103   1        ET0 = 1;        //开定时器2
 104   1        EA = 1;         //总中断使能
 105   1      }
 106          /******************************************************************************/
 107          /* 函数名称  : Init_Parameter                                                 */
 108          /* 函数描述  : 初始化参数和IO口函数                                           */
 109          /* 输入参数  : 无                                                             */
 110          /* 参数描述  : 无                                                             */
 111          /* 返回值    : 无                                                             */
 112          /******************************************************************************/
 113          void Init_Parameter(void)
 114          {
 115   1         OUTPUT =1;
 116   1         INPUT = 1;
 117   1         count = 0;
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 3   

 118   1         distance = 0;
 119   1      }
 120          /******************************************************************************/
 121          /* 函数名称  : display_char                                                   */
 122          /* 函数描述  : 显示字符串函数                                                 */
 123          /* 输入参数  : point,address                                                  */
 124          /* 参数描述  : 写入的字符串的地址指针 1602显示对应的地址                      */
 125          /* 返回值    : 无                                                             */
 126          /******************************************************************************/
 127          void display_char(uchar *point,uchar address)
 128          {
 129   1        uchar i;
 130   1        write_com(0x80 + address);
 131   1        for(i = 0;i < 16; i++)
 132   1        {
 133   2          write_date(*point);
 134   2          point++;
 135   2        }
 136   1      }
 137          /******************************************************************************/
 138          /* 函数名称  : display                                                        */
 139          /* 函数描述  : 显示数字                                                       */
 140          /* 输入参数  : number，address                                                */
 141          /* 参数描述  : number写入的数据，address地址                                  */
 142          /* 返回值    : 无                                                             */
 143          /******************************************************************************/  
 144          void display(int number,uchar address)
 145          {
 146   1        uchar b,c,d,e;
 147   1        b= (number / 1000);
 148   1        c= (number / 100) % 10;
 149   1        d = (number / 10) % 10;
 150   1        e = number % 10;
 151   1      
 152   1        write_com(0x80 + address);
 153   1        write_date(b + 48);
 154   1        write_date(c + 48);
 155   1        write_date(d + 48);
 156   1        write_date(46);           //小数点的ASCII
 157   1        write_date(e + 48);
 158   1        write_date(99);           //"c"的ASCII
 159   1        write_date(109);          //"m"的ASCII
 160   1      }
 161          /******************************************************************************/
 162          /* 函数名称  : Trig_SuperSonic                                                */
 163          /* 函数描述  : 发出声波函数                                                   */
 164          /* 输入参数  : i                                                              */
 165          /* 参数描述  : 发出的脉冲次数                                                 */
 166          /* 返回值    : 无                                                             */
 167          /******************************************************************************/
 168          void Trig_SuperSonic(int i)//出发声波
 169          {
 170   1        int j;
 171   1        for(j=0;j<i;j++)
 172   1        {
 173   2          _nop_();
 174   2          _nop_();
 175   2          _nop_();
 176   2          _nop_();
 177   2          _nop_();
 178   2          _nop_();
 179   2          _nop_();
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 4   

 180   2          _nop_();
 181   2          _nop_();
 182   2          _nop_();
 183   2          OUTPUT = 1;
 184   2          _nop_();
 185   2          _nop_();
 186   2          _nop_();
 187   2          _nop_();
 188   2          _nop_();
 189   2          _nop_();
 190   2          _nop_();
 191   2          _nop_();
 192   2             _nop_();
 193   2          OUTPUT = 0;
 194   2        }
 195   1      }
 196          /******************************************************************************/
 197          /* 函数名称  : Measure_Distance                                               */
 198          /* 函数描述  : 计算距离函数                                                   */
 199          /* 输入参数  : 无                                                             */
 200          /* 参数描述  : 无                                                             */
 201          /* 返回值    : 无                                                             */
 202          /******************************************************************************/
 203          void Measure_Distance(void)
 204          {
 205   1        uchar l;
 206   1        uint h,y;
 207   1        TR0 = 1;
 208   1        while(INPUT)
 209   1          {
 210   2              ;
 211   2          } 
 212   1        TR0 = 0;
 213   1        l = TL0;
 214   1        h = TH0;
 215   1        y = (h << 8) + l;
 216   1        y = y - 0xfc66;//us部分
 217   1        distance = y + 1000 * count;//计算总时间
 218   1        TL0 = 0x66;
 219   1        TH0 = 0xfc;
 220   1        delayt(30);
 221   1        distance = VELOCITY_30C * distance / 20000;
 222   1      }
 223          /*****************************************************
 224          函数功能：判断液晶模块的忙碌状态
 225          返回值：result。result=1，忙碌;result=0，不忙
 226          ***************************************************/
 227          bit BusyTest(void)
 228            {
 229   1          bit result;
 230   1          RS=0;       //根据规定，RS为低电平，RW为高电平时，可以读状态
 231   1          RW=1;
 232   1          E=1;        //E=1，才允许读写
 233   1          _nop_();   //空操作
 234   1          _nop_();
 235   1          _nop_(); 
 236   1          _nop_();   //空操作四个机器周期，给硬件反应时间 
 237   1          result=BF;  //将忙碌标志电平赋给result
 238   1         E=0;         //将E恢复低电平
 239   1         return result;
 240   1        }
 241          /*****************************************************
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 5   

 242          函数功能：将模式设置指令或显示地址写入液晶模块
 243          入口参数：dictate
 244          ***************************************************/
 245          void WriteInstruction (unsigned char dictate)
 246          {   
 247   1          while(BusyTest()==1);   //如果忙就等待
 248   1         RS=0;                  //根据规定，RS和R/W同时为低电平时，可以写入指令
 249   1         RW=0;   
 250   1         E=0;                   //E置低电平(根据表8-6，写指令时，E为高脉冲，
 251   1                                 // 就是让E从0到1发生正跳变，所以应先置"0"
 252   1         _nop_();
 253   1         _nop_();               //空操作两个机器周期，给硬件反应时间
 254   1         P0=dictate;            //将数据送入P0口，即写入指令或地址
 255   1         _nop_();
 256   1         _nop_();
 257   1         _nop_();
 258   1         _nop_();               //空操作四个机器周期，给硬件反应时间
 259   1         E=1;                   //E置高电平
 260   1         _nop_();
 261   1         _nop_();
 262   1         _nop_();
 263   1         _nop_();               //空操作四个机器周期，给硬件反应时间
 264   1          E=0;                  //当E由高电平跳变成低电平时，液晶模块开始执行命令
 265   1       }
 266          /*****************************************************
 267          函数功能：指定字符显示的实际地址
 268          入口参数：x
 269          ***************************************************/
 270           void WriteAddress(unsigned char x)
 271           {
 272   1           WriteInstruction(x|0x80); //显示位置的确定方法规定为"80H+地址码x"
 273   1       }
 274          /*****************************************************
 275          函数功能：将数据(字符的标准ASCII码)写入液晶模块
 276          入口参数：y(为字符常量)
 277          ***************************************************/
 278           void WriteData(unsigned char y)
 279           {
 280   1          while(BusyTest()==1);  
 281   1          RS=1;           //RS为高电平，RW为低电平时，可以写入数据
 282   1          RW=0;
 283   1          E=0;            //E置低电平(根据表8-6，写指令时，E为高脉冲，
 284   1                           // 就是让E从0到1发生正跳变，所以应先置"0"
 285   1          P0=y;           //将数据送入P0口，即将数据写入液晶模块
 286   1          _nop_();
 287   1          _nop_();
 288   1          _nop_();
 289   1           _nop_();       //空操作四个机器周期，给硬件反应时间
 290   1          E=1;           //E置高电平
 291   1          _nop_();
 292   1          _nop_();
 293   1          _nop_();
 294   1         _nop_();        //空操作四个机器周期，给硬件反应时间
 295   1         E=0;            //当E由高电平跳变成低电平时，液晶模块开始执行命令
 296   1       }
 297          /*****************************************************
 298          函数功能：对LCD的显示模式进行初始化设置
 299          ***************************************************/
 300          void LcdInitiate(void)
 301          {
 302   1          Delay_xMs(15);               //延时15ms，首次写指令时应给LCD一段较长的反应时间
 303   1          WriteInstruction(0x38);     //显示模式设置：16×2显示，5×7点阵，8位数据接口
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 6   

 304   1          Delay_xMs(5);                //延时5ms　，给硬件一点反应时间
 305   1          WriteInstruction(0x38);
 306   1          Delay_xMs(5);               //延时5ms　，给硬件一点反应时间
 307   1          WriteInstruction(0x38);     //连续三次，确保初始化成功
 308   1          Delay_xMs(5);               //延时5ms　，给硬件一点反应时间
 309   1          WriteInstruction(0x0c);     //显示模式设置：显示开，无光标，光标不闪烁
 310   1        Delay_xMs(5);               //延时5ms　，给硬件一点反应时间
 311   1        WriteInstruction(0x06);     //显示模式设置：光标右移，字符不移
 312   1        Delay_xMs(5);                //延时5ms　，给硬件一点反应时间
 313   1        WriteInstruction(0x01);     //清屏幕指令，将以前的显示内容清除
 314   1        Delay_xMs(5);             //延时5ms　，给硬件一点反应时间
 315   1      
 316   1       } 
 317          /************************************************************************
 318          以下是DS18B20的操作程序
 319           ************************************************************************/ 
 320          sbit DQ=P2^2;
 321          unsigned char time;   //设置全局变量，专门用于严格延时
 322          /*****************************************************
 323          函数功能：将DS18B20传感器初始化，读取应答信号
 324          出口参数：flag 
 325          ***************************************************/
 326          bit Init_DS18B20(void)  
 327          {
 328   1       bit flag;         //储存DS18B20是否存在的标志，flag=0，表示存在；flag=1，表示不存在
 329   1       DQ = 1;           //先将数据线拉高
 330   1       for(time=0;time<2;time++) //略微延时约6微秒
 331   1           ;
 332   1       DQ = 0;           //再将数据线从高拉低，要求保持480~960us
 333   1       for(time=0;time<200;time++)  //略微延时约600微秒
 334   1           ;         //以向DS18B20发出一持续480~960us的低电平复位脉冲 
 335   1       DQ = 1;           //释放数据线（将数据线拉高） 
 336   1        for(time=0;time<10;time++)
 337   1           ;  //延时约30us（释放总线后需等待15~60us让DS18B20输出存在脉冲）
 338   1       flag=DQ;          //让单片机检测是否输出了存在脉冲（DQ=0表示存在）      
 339   1       for(time=0;time<200;time++)  //延时足够长时间，等待存在脉冲输出完毕
 340   1            ;
 341   1       return (flag);    //返回检测成功标志
 342   1      }
 343          /*****************************************************
 344          函数功能：从DS18B20读取一个字节数据
 345          出口参数：dat
 346          ***************************************************/ 
 347          unsigned char ReadOneChar(void)
 348           {
 349   1          unsigned char i=0;  
 350   1          unsigned char dat;  //储存读出的一个字节数据
 351   1          for (i=0;i<8;i++)
 352   1           {
 353   2             
 354   2             DQ =1;       // 先将数据线拉高
 355   2             _nop_();     //等待一个机器周期   
 356   2             DQ = 0;      //单片机从DS18B20读书据时,将数据线从高拉低即启动读时序
 357   2            dat>>=1;
 358   2             _nop_();     //等待一个机器周期       
 359   2             DQ = 1;     //将数据线"人为"拉高,为单片机检测DS18B20的输出电平作准备
 360   2             for(time=0;time<2;time++)
 361   2                   ;      //延时约6us，使主机在15us内采样
 362   2             if(DQ==1)
 363   2                dat|=0x80;  //如果读到的数据是1，则将1存入dat
 364   2            else
 365   2              dat|=0x00;//如果读到的数据是0，则将0存入dat
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 7   

 366   2               //将单片机检测到的电平信号DQ存入r[i] 
 367   2             for(time=0;time<8;time++)
 368   2                  ;              //延时3us,两个读时序之间必须有大于1us的恢复期  
 369   2            }                     
 370   1         return (dat);    //返回读出的十进制数据
 371   1      }
 372          /*****************************************************
 373          函数功能：向DS18B20写入一个字节数据
 374          入口参数：dat
 375          ***************************************************/  
 376          WriteOneChar(unsigned char dat)
 377          {
 378   1        unsigned char i=0;
 379   1        for (i=0; i<8; i++)
 380   1           {
 381   2            DQ =1;         // 先将数据线拉高
 382   2            _nop_();       //等待一个机器周期  
 383   2            DQ=0;          //将数据线从高拉低时即启动写时序       
 384   2            DQ=dat&0x01;   //利用与运算取出要写的某位二进制数据,
 385   2                             //并将其送到数据线上等待DS18B20采样  
 386   2           for(time=0;time<10;time++) 
 387   2               ;//延时约30us，DS18B20在拉低后的约15~60us期间从数据线上采样
 388   2            DQ=1;          //释放数据线       
 389   2            for(time=0;time<1;time++)
 390   2              ;//延时3us,两个写时序间至少需要1us的恢复期
 391   2            dat>>=1;       //将dat中的各二进制位数据右移1位
 392   2           }
 393   1          for(time=0;time<4;time++)
 394   1                      ; //稍作延时,给硬件一点反应时间
 395   1      }
 396          /******************************************************************************
 397          以下是与温度有关的显示设置
 398           ******************************************************************************/
 399           /*****************************************************
 400          函数功能：显示没有检测到DS18B20
 401          ***************************************************/   
 402          void display_error(void)
 403           {
 404   1             unsigned char i;
 405   1               WriteAddress(0x00);    //写显示地址，将在第1行第1列开始显示
 406   1               i = 0;                //从第一个字符开始显示
 407   1              while(Error[i] != '\0')  //只要没有写到结束标志，就继续写
 408   1              {           
 409   2                WriteData(Error[i]);   //将字符常量写入LCD
 410   2                i++;                 //指向下一个字符
 411   2                Delay_xMs(100);//延时100ms较长时间，以看清关于显示的说明
 412   2              } 
 413   1              while(1)              //进入死循环，等待查明原因
 414   1                ;
 415   1      }
 416          /*****************************************************
 417          函数功能：显示温度符号
 418          ***************************************************/   
 419          void display_symbol(void)
 420           {
 421   1             unsigned char i;
 422   1               WriteAddress(0x00);    //写显示地址，将在第2行第1列开始显示
 423   1               i = 0;                //从第一个字符开始显示
 424   1              while(Temp[i] != '\0')  //只要没有写到结束标志，就继续写
 425   1              {           
 426   2                WriteData(Temp[i]);   //将字符常量写入LCD
 427   2                i++;                 //指向下一个字符
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 8   

 428   2                Delay_xMs(50);        //延时1ms给硬件一点反应时间
 429   2              } 
 430   1      }
 431          
 432          /*****************************************************
 433          函数功能：显示温度的小数点
 434          ***************************************************/   
 435          void  display_dot(void)
 436          {         
 437   1         WriteAddress(0x09);    //写显示地址，将在第2行第10列开始显示      
 438   1         WriteData('.');      //将小数点的字符常量写入LCD
 439   1         Delay_xMs(50);         //延时1ms给硬件一点反应时间   
 440   1      }
 441          /*****************************************************
 442          函数功能：显示温度的单位(Cent)
 443          ***************************************************/   
 444          void  display_cent(void)
 445          {
 446   1        unsigned char i;    
 447   1        WriteAddress(0x0c);        //写显示地址，将在第2行第13列开始显示  
 448   1        i = 0;                    //从第一个字符开始显示 
 449   1        while(Cent[i] != '\0')     //只要没有写到结束标志，就继续写
 450   1        {         
 451   2         WriteData(Cent[i]);     //将字符常量写入LCD
 452   2         i++;                 //指向下一个字符
 453   2         Delay_xMs(50);        //延时1ms给硬件一点反应时间
 454   2        } 
 455   1      }
 456          /*****************************************************
 457          函数功能：显示温度的整数部分
 458          入口参数：x
 459          ***************************************************/ 
 460          void display_temp1(unsigned char x)
 461          {
 462   1       unsigned char j,k,l;     //j,k,l分别储存温度的百位、十位和个位
 463   1        j=x/100;              //取百位
 464   1        k=(x%100)/10;    //取十位
 465   1        l=x%10;             //取个位  
 466   1        WriteAddress(0x06);    //写显示地址,将在第2行第7列开始显示
 467   1        WriteData(digit[j]);    //将百位数字的字符常量写入LCD
 468   1        WriteData(digit[k]);    //将十位数字的字符常量写入LCD
 469   1        WriteData(digit[l]);    //将个位数字的字符常量写入LCD
 470   1        Delay_xMs(50);         //延时1ms给硬件一点反应时间     
 471   1       }
 472           /*****************************************************
 473          函数功能：显示温度的小数数部分
 474          入口参数：x
 475          ***************************************************/ 
 476           void display_temp2(unsigned char x)
 477          {
 478   1        WriteAddress(0x0a);      //写显示地址,将在第2行第11列开始显示
 479   1        WriteData(digit[x]);     //将小数部分的第一位数字字符常量写入LCD
 480   1        Delay_xMs(50);          //延时1ms给硬件一点反应时间
 481   1      }
 482          /*****************************************************
 483          函数功能：做好读温度的准备
 484          ***************************************************/ 
 485          void ReadyReadTemp(void)
 486          {
 487   1          Init_DS18B20();     //将DS18B20初始化
 488   1          WriteOneChar(0xCC); // 跳过读序号列号的操作
 489   1          WriteOneChar(0x44); // 启动温度转换   
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 9   

 490   1          for(time=0;time<100;time++);   //温度转换需要一点时间
 491   1          Init_DS18B20();     //将DS18B20初始化
 492   1          WriteOneChar(0xCC); //跳过读序号列号的操作
 493   1          WriteOneChar(0xBE); //读取温度寄存器,前两个分别是温度的低位和高位 
 494   1      }
 495          
 496          /******************************************************************************/
 497          /* 函数名称  : main                                                           */
 498          /* 函数描述  : 主函数                                                         */
 499          /* 输入参数  : 无                                                             */
 500          /* 参数描述  : 无                                                             */
 501          /* 返回值    : 无                                                             */
 502          /******************************************************************************/          
 503          void main(void)
 504          {
 505   1        unsigned char TL;     //储存暂存器的温度低位
 506   1        unsigned char TH;    //储存暂存器的温度高位
 507   1        unsigned char TN;      //储存温度的整数部分
 508   1        unsigned char TD;       //储存温度的小数部分
 509   1        RW = 0;
 510   1        initLCD();
 511   1        Init_MCU();
 512   1        Init_Parameter();
 513   1        Alarm(2);
 514   1        display_char(table,0x00);
 515   1        display_char(table0,0x40);
 516   1        Delay_xMs(30000);
 517   1        display_char(table2,0x00);
 518   1        display_char(table1,0x40);
 519   1        if(Init_DS18B20()==1)
 520   1          display_error();
 521   1        display_symbol();    //显示温度说明
 522   1        display_dot();       //显示温度的小数点
 523   1        display_cent();      //显示温度的单位
 524   1        while(1)
 525   1        {
 526   2           Trig_SuperSonic(1000);         //触发超声波发射
 527   2           while(INPUT == 0)          //等待回声
 528   2               {
 529   3                   ;
 530   3               }
 531   2           Measure_Distance();        //计算脉宽并转换为距离
 532   2           ReadyReadTemp();     //读温度准备
 533   2           TL=ReadOneChar();    //先读的是温度值低位
 534   2           TH=ReadOneChar();    //接着读的是温度值高位
 535   2           TN=TH*16+TL/16;      //实际温度值=(TH*256+TL)/16,即：TH*16+TL/16
 536   2                              //这样得出的是温度的整数部分,小数部分被丢弃了
 537   2           TD=(TL%16)*10/16;    //计算温度的小数部分,将余数乘以10再除以16取整，
 538   2                              //这样得到的是温度小数部分的第一位数字(保留1位小数)
 539   2           display_temp1(TN);    //显示温度的整数部分
 540   2           display_temp2(TD);    //显示温度的小数部分
 541   2           display_char(table3,0x40);
 542   2           display(distance,0x49);    //显示距离
 543   2           Init_Parameter();          // 参数重新初始化
 544   2           delayt(100);               //延时，两次发射之间要至少有10ms间隔
 545   2         }  
 546   1      }
 547          /******************************************************************************/
 548          /* 函数名称  : timer0                                                         */
 549          /* 函数描述  : T0中断处理函数                                                 */
 550          /* 输入参数  : 无                                                             */
 551          /* 参数描述  : 无                                                             */
C51 COMPILER V9.54   ULTRASONIC                                                            07/02/2017 18:12:14 PAGE 10  

 552          /* 返回值    : 无                                                             */
 553          /******************************************************************************/
 554          void timer0 (void) interrupt 1
 555          {
 556   1        TF0 = 0;
 557   1        TL0 = 0x66;
 558   1        TH0 = 0xfc;
 559   1        count++;
 560   1        if(count == 18)//超声波回声脉宽最多18ms
 561   1        {
 562   2          TR0 =0;
 563   2          TL0 = 0x66;
 564   2          TH0 = 0xfc;
 565   2          count = 0;
 566   2        }
 567   1      }
 568          /******************************************************************************/
*** WARNING C290 IN LINE 395 OF UltraSonic.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1256    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     86      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
